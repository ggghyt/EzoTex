<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezotex.standard.mappers.StandardMapper">
<select id="searchId" resultType="int">
select count(*) as count
from
(select emp_id as id
from emp
union
select company_id
from company)
where id = #{id}
</select>

<select id="deptList" parameterType="DeptDTO">
select dept_code, 
       dept_name,
       dept_no
from dept
order by dept_no asc
</select>

<select id="positionList" parameterType="PositionDTO">
select position_code, 
       position_name, 
       position_no
from position
order by position_no asc
</select>

<insert id="insertEmp" parameterType="EmpDTO">
insert into emp
values(concat('EMP', LPAD(EMP_SEQ.nextval, 4, 0)), 
       #{empId}, 
       #{empPassword}, 
       #{empName}, 
       #{empPhone}, 
       #{empEmail}, 
       #{addressSeq}, 
       #{deptCode}, 
       #{positionCode}, 
       #{empImg}, 
       sysdate, 
       null, 
       '0'
)
</insert>

<insert id="insertAddress" parameterType="EmpDTO">
insert into address_list
values(ADDRESS_LIST_SEQ.nextval, 
       #{addressNumber}, 
       #{addressMain}, 
       #{addressInfo},
       #{addressReference}
)
</insert>

<insert id="insertCompany" parameterType="CompanyDTO">
insert into company
values(concat('COM', LPAD(COMPANY_SEQ.nextval, 4, 0)), 
       #{companyId}, 
       #{companyPassword}, 
       #{companyExponent}, 
       #{companyCharger}, 
       #{companyPhone}, 
       #{companyEmail}, 
       #{companyName}, 
       #{addressSeq}, 
       #{companyNumber}, 
       #{companyImg}, 
       #{section},
       #{distance}, 
       #{requireTime}, 
       #{addressCode}, 
       '0'
)
</insert>

<select id="findDivyAddress" parameterType="DivyAddressDTO" resultType="String">
select *
from(
select address_code
from divy_address
where do like '%' || #{main} || '%'
and si like '%' || #{sub} || '%'
)
where rownum = 1
</select>

<select id="findAddressSeq" resultType="String">
select *
from(
     select address_seq
     from address_list
     order by 1 desc
)
where rownum = 1
</select>

<select id="idApproval" resultType="int">
select approval
from (
select emp_id as id,
       approval
from emp
union
select company_id,
       approval
from company
)
where id = #{id}
</select>

<select id="findNameEmail" resultType="ResetPasswordDTO">
select *
from(
select emp_id as id,
       emp_name as name, 
       emp_email as email
from emp
union
select company_id, 
       company_name, 
       company_email
from company
)
where id = #{id}
</select>

<update id="passwordEmpUpdate">
update emp
set emp_password = #{password}
where emp_id = #{id}
</update>

<update id="passwordCompanyUpdate">
update company
set company_password = #{password}
where company_id = #{id}
</update>

<select id="productListAll" resultType="ProductListInfoDTO">
select product_info.product_code, 
       product_name, 
       code_name as product_type_name, 
       product_info.product_type, 
       lclas, 
       sclas, 
       unit_price, 
       vl
from product_info
left join product_category
on product_info.product_code = product_category.product_code
join common_code_details
on product_info.product_type = common_code_details.comm_detail_code
order by 1
</select>

<select id="productListSearch" resultType="ProductListInfoDTO">
select product_info.product_code, 
       product_name, 
       code_name as product_type_name, 
       product_info.product_type, 
       lclas, 
       sclas, 
       unit_price, 
       vl
from product_info
left join product_category
on product_info.product_code = product_category.product_code
join common_code_details
on product_info.product_type = common_code_details.comm_detail_code
where product_info.product_code like '%' || #{productCode} || '%'
and product_name like '%' || #{productName} || '%'
and product_info.product_type like '%' || #{productType} || '%'
and lclas like '%' || #{lclas} || '%'
and sclas like '%' || #{sclas} || '%'
and unit_price between #{minPrice} and #{maxPrice}
order by 1
</select>

<select id="categoryLclas">
select distinct lclas
from product_category
</select>

<select id="categorySclas">
select distinct sclas
from product_category
where lclas = #{lclas}
</select>

</mapper>