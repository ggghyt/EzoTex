<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezotex.supply.mappers.SupplyMapper">

	<!-- 전체 제품 목록 단순조회 -->
	<select id="listProduct" resultType="ProductDTO" parameterType="ProductDTO">
		SELECT p.product_code,
		       p.product_name,
		       c.lclas,
			     c.sclas
		FROM   product_info p LEFT JOIN product_category c ON p.product_code = c.product_code
		WHERE  p.product_type = 'PT02' 
		<if test='productCode != null and productCode != ""'> AND p.product_code LIKE '%' || #{productCode} || '%' </if> 
		<if test='productName != null and productName != ""'> AND p.product_name LIKE '%' || #{productName} || '%'	</if> 
		<if test='lclas != null and lclas != "null"'> AND c.lclas = #{lclas}	</if> 
		<if test='sclas != null and sclas != "null"'> AND c.sclas = #{sclas}	</if> 
		ORDER  BY product_code DESC
	</select>
	
	<!-- 해당 제품의 전체 옵션 목록 (사이즈/색상 중 한 가지만 있거나 단일 제품인 경우 필요) -->
	<select id="findOptions" resultType="ProductDTO">
		SELECT product_size,
		       get_comm(product_size) AS size_name,
		       product_color
		FROM   product_option
		WHERE  product_code = #{productCode}
		  AND  discontinued = 'YN02'
		ORDER BY product_color, product_size
	</select>
	
	<!-- (서비스) 해당 제품의 사이즈 배열 반환용 -->
	<select id="findSize" resultType="ProductDTO">
		SELECT product_size,
		       get_comm(product_size) AS size_name
		FROM   product_option
		WHERE  product_code = #{productCode}
		  AND  discontinued = 'YN02'
		GROUP  BY product_code, product_size
		--ORDER  BY TO_NUMBER(SUBSTR(product_size, 3))
	</select>
	
	<!-- 제품코드 기반 옵션 빈 PIVOT -->
	<select id="pivotProductOption" resultType="map">
		WITH temp AS( -- 임시 테이블 지정
		SELECT product_color,
		       product_size,
		       option_code
		FROM   product_option
		WHERE  product_code = #{productCode}
		)
		SELECT  *
		FROM temp
		PIVOT( COUNT(option_code) -- 0이면 해당 색상엔 존재하지 않는 사이즈
		    FOR product_size IN ( -- '값' alias, ... 열과 행을 바꿔 선택한 컬럼으로 그룹함수 실행
		    	<foreach collection="sizeList" item="size" separator=",">
		       	 '${size.productSize}' as "${size.sizeName}"
		      </foreach>
		    )
		)pvt
		ORDER BY product_color
	</select>
	
	<!-- 제품 코드 기반 집계 목록 -->
	<select id="pivotProductSupply" resultType="map">
		WITH temp AS( -- 임시 테이블 지정
		SELECT d.product_code,
		       d.product_color, -- o로 변경 필요
		       d.product_size,
		       d.supply_qy
		FROM   supply_plan s JOIN supply_plan_details d
		                       ON s.supply_plan_code = d.supply_plan_code
		                     LEFT JOIN product_option o
		                       ON d.product_code = o.product_code
		                      AND d.product_size = o.product_size
		                      AND d.product_color = o.product_color
		WHERE  d.product_code = #{dto.productCode}
		  <if test='dto.supplyPlanCode != null and dto.supplyPlanCode != ""'>AND  s.supply_plan_code = #{dto.supplyPlanCode}</if>
		)
		SELECT  *
		FROM temp
		PIVOT( SUM(supply_qy) -- 열과 행을 바꿔 선택한 컬럼으로 그룹함수 실행
		    FOR product_size IN ( -- '값' alias, ...
		       <foreach collection="sizeList" item="size" separator=",">
		       	  '${size.productSize}' as "${size.sizeName}"
		       </foreach>
		    )
		)pvt
		ORDER BY product_color
	</select>
	
	<!-- 공급계획 등록(헤더) -->
	<insert id="insertSupplyPlan" parameterType="SupplyDTO">
		INSERT INTO supply_plan (SUPPLY_PLAN_CODE, SUPPLY_YEAR, SEASON, CHARGER_CODE, CHARGER_NAME, REMARK) 
		VALUES ((SELECT 'SUP' || LPAD(NVL(SUBSTR(MAX(supply_plan_code), -4), 0) + 1, 4, 0) FROM supply_plan),
		         #{supplyYear}, #{season}, #{chargerCode}, #{chargerName}, #{remark})
	</insert>
	
	<!-- 공급계획 등록(디테일) -->
	<insert id="insertSupplyPlanDetail" parameterType="SupplyDTO">
		INSERT INTO supply_plan_details (SUPPLY_PLAN_DETAIL_CODE, SUPPLY_PLAN_CODE, PRODUCT_CODE, PRODUCT_COLOR, PRODUCT_SIZE, SUPPLY_QY, SUPPLY_DATE) 
		VALUES ((SELECT NVL(MAX(supply_plan_detail_code), 0) + 1 FROM supply_plan_details), -- 다음 번호 조회
		        (SELECT MAX(supply_plan_code) FROM supply_plan), #{productCode}, #{productColor}, #{productSize}, #{supplyQy}, #{supplyDate})
	</insert>
	
</mapper>