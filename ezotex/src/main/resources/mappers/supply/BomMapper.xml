<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezotex.supply.mappers.BomMapper">

	<!-- BOM을 등록할 전체 제품 목록과 등록상태 -->
	<select id="listBomProduct" resultType="map" parameterType="ProductDTO">
		SELECT p.product_code,
		       p.product_name,
		       c.lclas,
			     c.sclas,
		       CASE WHEN p.product_code IN (SELECT o.product_code -- BOM 없는 옵션이 하나라도 있는 경우
		                                    FROM   product_option o LEFT JOIN bom b ON o.product_code = b.product_code 
		                                                                  AND o.product_color = b.product_color 
		                                                                  AND o.product_size = b.product_size
		                                    WHERE  b.bom_code IS NULL)
		              OR p.product_code NOT IN (SELECT product_code -- BOM이 하나도 등록되지 않은 경우
		                                        FROM   BOM)
		            THEN '등록필요' ELSE '완료' END status
		FROM   product_info p LEFT JOIN product_category c ON p.product_code = c.product_code
		WHERE  p.product_type = 'PT02' 
		<if test='productCode != null and productCode != ""'> AND p.product_code LIKE '%' || #{productCode} || '%' </if> 
		<if test='productName != null and productName != ""'> AND p.product_name LIKE '%' || #{productName} || '%'	</if> 
		<if test='lclas != null and lclas != "null"'> AND c.lclas = #{lclas}	</if> 
		<if test='sclas != null and sclas != "null"'> AND c.sclas = #{sclas}	</if> 
		ORDER  BY status, product_code DESC
	</select>
	
	<!-- 제품 목록 전체 개수 -->
	<select id="countBomProduct" parameterType="ProductDTO">
		SELECT COUNT(*)
		FROM   product_info p LEFT JOIN product_category c ON p.product_code = c.product_code
		WHERE  product_type = 'PT02' 
		<if test='productCode != null and productCode != ""'> AND p.product_code LIKE '%' || #{productCode} || '%' </if> 
		<if test='productName != null and productName != ""'> AND p.product_name LIKE '%' || #{productName} || '%'	</if> 
		<if test='lclas != null and lclas != "null"'> AND c.lclas = #{lclas}	</if> 
		<if test='sclas != null and sclas != "null"'> AND c.sclas = #{sclas}	</if> 
	</select>
	
	<!-- 제품의 옵션 조회 -->
	<select id="listColor" resultType="ProductDTO">
		SELECT DISTINCT(o.product_color),
		       CASE WHEN 'YN02' NOT IN (SELECT discontinued  -- 전체 단종된 경우 표시
		                                FROM   product_option 
		                                WHERE  product_code = #{productCode}
		                                  AND  product_color = o.product_color)
		            THEN 'Y' ELSE 'N' END discontinued
		FROM   product_option o
		WHERE  o.product_code = #{productCode}
		ORDER  BY discontinued, product_color
	</select>
	
	<select id="listSizeByColor" resultType="ProductDTO">
		SELECT DISTINCT(product_size),
		       get_comm(product_size) size_name,
		       get_comm(discontinued) discontinued
		FROM   product_option
		WHERE  product_code = #{productCode}
		  AND  product_color = #{productColor}
		ORDER  BY discontinued, product_size
	</select>
	
	<!-- 전체 자재 목록 + 해당되는 BOM 조회 -->
	<select id="listBomMaterial" resultType="BomDTO" parameterType="ProductDTO">
		SELECT p.product_code mtril_code,
		       p.product_name mtril_name,
		       get_comm(p.unit_name) unit_name,
		       d.require_qy,
		       c.lclas,
     		   c.sclas,
     		   b.rgsde,
     		   b.charger_name
		FROM   bom_details d JOIN bom b ON d.bom_code = b.bom_code
		                      AND b.bom_code = (SELECT MAX(bom_code) 
		                                        FROM bom -- 가장 최신 bom 데이터만 추출
		                                        WHERE product_code = #{productCode}
		                                          <if test='productColor != null and productColor != "null"'>AND product_color = #{productColor}</if>
		                                          <if test='productSize != null and productSize != "null"'>AND product_size = #{productSize}</if> )
		                     RIGHT JOIN product_info p ON d.mtril_code = p.product_code
                     		 LEFT JOIN  product_category c ON p.product_code = c.product_code
		WHERE  p.product_type = 'PT01'
		ORDER  BY require_qy DESC NULLS LAST, mtril_code DESC
	</select>
	
	<!-- BOM 등록(헤더) -->
	<insert id="insertBom" parameterType="BomDTO">
		INSERT INTO bom (BOM_CODE, PRODUCT_CODE, PRODUCT_COLOR, PRODUCT_SIZE, CHARGER_CODE, CHARGER_NAME) 
		VALUES ((SELECT 'BOM' || LPAD(NVL(SUBSTR(MAX(bom_code), -4), 0) + 1, 4, 0) FROM bom), -- 다음 번호 조회
				#{productCode}, #{productColor}, #{productSize}, #{chargerCode}, #{chargerName})
	</insert>
	
	<!-- BOM 등록(디테일) -->
	<insert id="insertBomDetail" parameterType="BomDTO">
		INSERT INTO bom_details (bom_detail_code, bom_code, mtril_code, require_qy) 
		VALUES ((SELECT 'BOD' || LPAD(NVL(SUBSTR(MAX(bom_detail_code), -4), 0) + 1, 4, 0) FROM bom_details), -- 다음 번호 조회
		        (SELECT MAX(bom_code) FROM bom), #{mtrilCode}, #{requireQy})
	</insert>

</mapper>