<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezotex.delivery.mappers.DeliveryMapper">

	<!-- (제조업체 사용)주문 조회 -->
	<select id="findAll" resultType="OrderProductDeliveryDTO" parameterType="DeliveryRegistSearchDTO">
		SELECT *
		FROM (
		    select info.*
		    from (
	                SELECT /*+ INDEX_DESC(ol PK_ORDER_LIST)*/
	                       ROWNUM AS rn,
	                       ol.product_order_code AS product_order_code,
	                       ol.company_code AS company_code,
	                       ol.company AS company,
	                       product_summary('order_product', product_order_code) AS summary,
	                       ol.charger AS orderCharger,
	                       ol.order_date AS order_date,
	                       ol.delivery_request_deadline AS dedt,
	                       get_comm(ol.order_status) AS orderStatus
	                FROM   order_list ol             
	               	<where>	               	
			            <if test='cri.orderCode != null and cri.orderCode != ""'>	    
			                AND ol.product_order_code LIKE '%' || UPPER(#{cri.orderCode}) || '%'    --주문코드
			            </if>
			            <if test="cri.totalAmountStart != null and cri.totalAmountEnd != null">		    
			                AND ol.amount BETWEEN #{cri.totalAmountStart} AND #{cri.totalAmountEnd}              --금액합계
			            </if>
			            <if test="cri.productName != null and cri.productName != null">		    
			                AND  ol.product_order_code IN (SELECT op.product_order_code 
                                 						   FROM order_product op JOIN product_info pi 
                                                         						   ON (op.product_code = pi.product_code)
                                 						   WHERE pi.product_name LIKE '%' || #{cri.productName} || '%')               --제품명
			            </if>
			            <if test="cri.productCode != null and cri.productCode != null">		    
			                AND ol.product_order_code IN (SELECT  product_order_code 
                                 						  FROM order_product
                                 						  WHERE UPPER(product_code) LIKE '%' || UPPER(#{cri.productCode}) || '%')               --제품코드
			            </if>
			            <if test='cri.companyName != null and cri.companyName != ""'>
			                AND ol.company LIKE '%' || #{cri.companyName} || '%'                          --업체명
			            </if>
			            <if test='cri.companyCode != null and cri.companyCode != ""'>
			                AND ol.company_code LIKE '%' || UPPER(#{cri.companyCode}) || '%'                --업체코드
			            </if>
			            <if test='cri.orderCharger != null and cri.orderCharger != ""'>		    
			                AND ol.charger LIKE '%' || #{cri.orderCharger} || '%'                          --주문 담당자
			            </if>
			            <if test="cri.orderDateStart != null and cri.orderDateStart != '' and cri.orderDateEnd != null and cri.orderDateEnd != ''">
			                AND ol.order_date BETWEEN TO_DATE(#{cri.orderDateStart}, 'YYYY-MM-DD') AND TO_DATE(#{cri.orderDateEnd}, 'YYYY-MM-DD')  --주문일 
			            </if>
			            <if test="cri.dedtStart != null and cri.dedtStart != '' and cri.dedtEnd != null and cri.dedtEnd != ''">
			                AND ol.delivery_request_deadline BETWEEN TO_DATE(#{cri.dedtStart}, 'YYYY-MM-DD') AND TO_DATE(#{cri.dedtEnd}, 'YYYY-MM-DD') --납기일
			            </if>
			            <choose>
			                  <when test="cri.orderStatus != null and cri.orderStatus != ''"> 
			                            AND order_status = #{cri.orderStatus}
			                  </when>
			                  <otherwise> 
			                           AND order_status IN ('OR01', 'OR06')
			                  </otherwise>
			            </choose>
	               	</where>                
		    )info
		    WHERE info.rn  <![CDATA[ <= ]]>#{cri.end}) page
		WHERE page.rn  <![CDATA[ >= ]]>#{cri.start}
	</select>
	
	<!-- 주문 조회 전체 수량(페이징 용) -->
	<select id="getCount" resultType="int" parameterType="DeliveryRegistSearchDTO">
			SELECT COUNT(*)
              FROM   order_list ol             
             	<where>	               	
			            <if test='cri.orderCode != null and cri.orderCode != ""'>	    
			                AND ol.product_order_code LIKE '%' || #{cri.orderCode} || '%'    --주문코드
			            </if>
			            <if test="cri.totalAmountStart != null and cri.totalAmountEnd != null">		    
			                AND ol.amount BETWEEN #{cri.totalAmountStart} AND #{cri.totalAmountEnd}              --금액합계
			            </if>
			            <if test="cri.productName != null and cri.productName != null">		    
			                AND  ol.product_order_code IN (SELECT op.product_order_code 
                                 						   FROM order_product op JOIN product_info pi 
                                                         						   ON (op.product_code = pi.product_code)
                                 						   WHERE pi.product_name LIKE '%' || #{cri.productName} || '%')               --제품명
			            </if>
			            <if test="cri.productCode != null and cri.productCode != null">		    
			                AND ol.product_order_code IN (SELECT  product_order_code 
                                 						  FROM order_product
                                 						  WHERE UPPER(product_code) LIKE '%' || UPPER(#{cri.productCode}) || '%')               --제품코드
			            </if>
			            <if test='cri.companyName != null and cri.companyName != ""'>
			                AND ol.company LIKE '%' || #{cri.companyName} || '%'                          --업체명
			            </if>
			            <if test='cri.companyCode != null and cri.companyCode != ""'>
			                AND ol.company_code LIKE '%' || #{cri.companyCode} || '%'                --업체코드
			            </if>
			            <if test='cri.orderCharger != null and cri.orderCharger != ""'>		    
			                AND ol.charger LIKE '%' || #{cri.orderCharger} || '%'                          --주문 담당자
			            </if>
			            <if test="cri.orderDateStart != null and cri.orderDateStart != '' and cri.orderDateEnd != null and cri.orderDateEnd != ''">
			                AND ol.order_date BETWEEN TO_DATE(#{cri.orderDateStart}, 'YYYY-MM-DD') AND TO_DATE(#{cri.orderDateEnd}, 'YYYY-MM-DD')  --주문일 
			            </if>
			            <if test="cri.dedtStart != null and cri.dedtStart != '' and cri.dedtEnd != null and cri.dedtEnd != ''">
			                AND ol.delivery_request_deadline BETWEEN TO_DATE(#{cri.dedtStart}, 'YYYY-MM-DD') AND TO_DATE(#{cri.dedtEnd}, 'YYYY-MM-DD') --납기일
			            </if>
			            <choose>
			                  <when test="cri.orderStatus != null and cri.orderStatus != ''"> 
			                            AND order_status = #{cri.orderStatus}
			                  </when>
			                  <otherwise> 
			                           AND order_status IN ('OR01', 'OR06')
			                  </otherwise>
			            </choose>
	               	</where>                       
	</select>
	
	<!-- 주문정보 모두 가져오기 -->
	<select id="getOrderInfo" parameterType="String">
		WITH order_info AS (
		    --주문정보
		    SELECT ol.product_order_code AS product_order_code,
		           ol.company_code AS company_code,
		           ol.charger AS charger, 
		           ol.amount AS amount
		    FROM order_list ol
		),
		products AS (
		    --제품정보
		    SELECT op.product_order_code AS product_order_code,
		           op.product_code AS product_code,
		           pi.product_name AS product_name,
		           SUM(op.qy) AS total_qy
		    FROM order_product op JOIN product_info pi 
		                            ON op.product_code = pi.product_code
		    WHERE op.product_order_code = #{product_order_code}
		    GROUP BY op.product_order_code, op.product_code, pi.product_name
		),
		company_info AS (
		    --회사정보
		    SELECT cp.company_code AS company_code,
		           al.address_main || ' ' || al.address_info AS address -- 주소 결합 시 공백 추가
		    FROM company cp JOIN address_list al 
		                      ON cp.address_seq = al.address_seq
		)
		-- 주문번호, 주문담당자, 주문수량, 금액합계, 주소, 제품코드, 제품명
		SELECT m.product_order_code AS product_order_code,
		       m.charger AS charger,
		       t.total_qy AS req_qy,
		       m.amount AS amount,
		       s.address AS address,
		       t.product_code AS product_code,
		       t.product_name AS product_name
		FROM order_info m 
		JOIN company_info s ON m.company_code = s.company_code
		JOIN products t ON m.product_order_code = t.product_order_code
		WHERE m.product_order_code = #{product_order_code}
	</select>
	
	<!-- 제품별 사이즈 리스트 -->
	<select id="findBySize">
		SELECT product_code,
		       product_size AS product_size,
		       product_size AS size_sort,
		       get_comm(product_size) AS show_size
		FROM   product_option
		WHERE  product_code = #{productCode}
		GROUP BY product_size, product_code
		ORDER BY TO_NUMBER(SUBSTR(size_sort, 3))
	</select>
	
	<!-- 제품 코드 기반 옵션,잔여량 리스트 -->
	<select id="sizeFindByProductCode">
		WITH product_size AS(
				    SELECT  
				        op.product_order_code AS order_code,
				        op.product_code AS product_code,
				        op.product_color AS product_color,
				        're' || get_comm(op.product_size) AS forpvt,
				        (op.qy - COALESCE(SUM(dd.delivery_qy), 0)) AS request_qy
				    FROM order_product op LEFT JOIN delivery_details dd
				        						 ON op.product_order_code = dd.order_code
										        AND op.product_code = dd.product_code
										        AND op.product_color = dd.product_color
										        AND op.product_size = dd.product_size
				    WHERE op.product_order_code = #{orderCode}
				      AND op.product_code = #{productCode}
				    GROUP BY op.product_order_code, op.product_code, op.product_color, op.product_size, op.qy)
			SELECT  *
		 	FROM product_size
			pivot( sum(request_qy)
		            FOR forpvt IN (

					   <foreach collection="list" item="size" separator=",">
		                 '${'re' + size.showSize}' AS ${'re' + size.showSize}
		               </foreach>
		            )
		)pvt
	</select>
	
	<!-- 출고코드 자동 생성 -->
	<select id="getDeliveryCode">
		SELECT COALESCE(
		    (SELECT  CASE WHEN LENGTH('DEV' || TO_CHAR(SYSDATE, 'YYMMDD') || LPAD((TO_NUMBER(SUBSTR(MAX(delivery_code), 10)) + 1), 4, 0)) = 9 THEN null
		             ELSE 'DEV' || TO_CHAR(SYSDATE, 'YYMMDD') || LPAD((TO_NUMBER(SUBSTR(MAX(delivery_code), 10)) + 1), 4, 0)
		             END
		     FROM delivery 
		     WHERE   TO_CHAR(rgsde, 'YY/MM/DD') = (SELECT TO_CHAR(SYSDATE, 'YY/MM/DD') FROM DUAL)), 
		    ('DEV' || TO_CHAR(SYSDATE, 'YYMMDD') || '0001')) AS delivery_code
		FROM DUAL
	</select>
	
	<!-- 분할출고 여부 체크 -->
	<select id="getTime">
		SELECT COUNT(*)+1 AS time
		FROM delivery
		WHERE product_order_code = #{productOrderCode}
	</select>
	
	<!-- 주문 상태 업데이트 -->
	<update id="updateOrderStatus">
		UPDATE order_list
		SET    order_status = #{info.orderStatus}
		WHERE  product_order_code = #{info.productOrderCode}
	</update>
	
	<!-- 출고 마스터 정보 등록 -->
	<insert id="insertDeliveryMaster">
		INSERT INTO delivery(delivery_code, company_se, product_order_code, company_code, company_name, order_date, dedt, storage_name, dedt_address
							,delivery_status , remark, charger_code, charger_name, rgsde, updde, time, amount)
		VALUES (#{info.deliveryCode}, #{info.companySe}, #{info.productOrderCode}, #{info.companyCode}, #{info.companyName}, #{info.orderDate}, #{info.dedt}, #{info.storageName}, #{info.dedtAddress}
				, #{info.deliveryStatus}, #{info.remark}, #{info.chargerCode}, #{info.chargerName}, SYSDATE, SYSDATE, #{info.time}, #{info.amount})
	</insert>
	
	<!-- 출고 상세 등록(제조업체 사용) -->
	<insert id="insertDeliveryDetails">
		INSERT INTO delivery_details(delivery_product_no, delivery_code, product_code, product_size, product_color, product_lot
									 , request_qy, delivery_qy, product_se, order_code, unit_price, price)
		VALUES (delivery_details_seq.NEXTVAL, #{pinfo.deliveryCode}, #{pinfo.productCode}, #{pinfo.productSize}, #{pinfo.productColor}, #{pinfo.productLot},
				#{pinfo.reqQy}, #{pinfo.deliveryQy}, #{pinfo.productSe}, #{pinfo.productOrderCode}, #{pinfo.unitPrice}, #{pinfo.price})
	</insert>
	
	<!-- 제품 옵션에 맞는 로트 수량 가져오기 -->
	<select id="getProductLot">
		SELECT lot AS productLot,
			   inventory_qy AS lotQy
		FROM   inventory
		WHERE  product_se = 'PT02'
		AND    product_code = #{pinfo.productCode}
		AND    product_color = #{pinfo.productColor}
		AND    product_size = #{pinfo.productSize}
		AND    inventory_qy > 0
	</select>
	
	<!-- 로트 출고 수량만큼 빼서 업데이트 하기. -->
	<update id="updateLotQy">
		UPDATE inventory
		SET inventory_qy = inventory_qy - #{deInfo.deliveryQy}
		WHERE product_code = #{deInfo.productCode}
		AND   product_color = #{deInfo.productColor}
		AND   product_size = #{deInfo.productSize}
	</update>
	
	<select id="getPrice">
		select unit_price AS unit_price,
		       unit_price * #{pinfo.deliveryQy} AS price
		from order_product
		where product_order_code = #{pinfo.productOrderCode}
		and   product_code = #{pinfo.productCode}
		and   product_size = #{pinfo.productSize}
		and   product_color = #{pinfo.productColor}
	</select>
	
	<!-- 납품 조회(제조업체) -->
	<select id="deliveryList">
		SELECT *
		FROM (
		    SELECT *
		    FROM (
		            SELECT  /*+ INDEX_DESC(de PK_DELIVERY)*/
		                    ROWNUM AS rn,
		                    de.delivery_code AS delivery_code,
		                    ol.product_order_code AS product_order_code,
		                    de.company_code AS company_code,
		                    de.company_name AS company,
		                    de.order_date AS order_date,
		                    de.dedt AS dedt,
		                    product_summary('delivery_details', de.delivery_code)  AS summary,
		                    de.time AS time,
		                    get_comm(de.delivery_status) AS delivery_status,
		                    de.remark AS remark,
		                    de.storage_name AS storage_name,
		                    de.dedt_address AS dedt_address,
		                    TO_CHAR(de.rgsde, 'yyyy-MM-dd') AS regist_date
		            FROM    delivery de JOIN order_list ol
		                                  ON de.product_order_code = ol.product_order_code
					<where>	               	
			            <if test='cri.deliveryCode != null and cri.deliveryCode != ""'>	    
			                AND de.delivery_code LIKE '%' || UPPER(#{cri.deliveryCode}) || '%'    --주문코드
			            </if>
			            <if test='cri.orderCode != null and cri.orderCode != ""'>	    
			                AND ol.product_order_code LIKE '%' || UPPER(#{cri.orderCode}) || '%'    --주문코드
			            </if>
			            <if test="cri.productName != null and cri.productName != null">		    
			                AND  de.delivery_code IN (SELECT dd.delivery_code 
                                 						   FROM delivery_details dd JOIN product_info pi 
                                                         						   ON (dd.product_code = pi.product_code)
                                 						   WHERE pi.product_name LIKE '%' || #{cri.productName} || '%')               --제품명
			            </if>
			            <if test="cri.productCode != null and cri.productCode != null">		    
			                AND de.delivery_code IN (SELECT  delivery_code 
                                 					 FROM 	  delivery_details
                                 					 WHERE   UPPER(product_code) LIKE '%' || UPPER(#{cri.productCode}) || '%')               --제품코드
			            </if>
			            <if test='cri.companyName != null and cri.companyName != ""'>
			                AND de.company_name LIKE '%' || #{cri.companyName} || '%'                          --업체명
			            </if>
			            <if test='cri.companyCode != null and cri.companyCode != ""'>
			                AND de.company_code LIKE '%' || UPPER(#{cri.companyCode}) || '%'                --업체코드
			            </if>
			            <if test='cri.deliveryChargerCode != null and cri.deliveryChargerCode != ""'>		    
			                AND de.charger_code LIKE '%' || #{cri.deliveryChargerCode} || '%'                          --주문 담당자
			            </if>
			            <if test='cri.deliveryCharger != null and cri.deliveryCharger != ""'>		    
			                AND de.charger_name LIKE '%' || #{cri.deliveryCharger} || '%'                          --주문 담당자
			            </if>
			            <if test="cri.orderDateStart != null and cri.orderDateStart != '' and cri.orderDateEnd != null and cri.orderDateEnd != ''">
			                AND de.order_date BETWEEN TO_DATE(#{cri.orderDateStart}, 'YYYY-MM-DD') AND TO_DATE(#{cri.orderDateEnd}, 'YYYY-MM-DD')  --주문일 
			            </if>
			            <if test="cri.dedtStart != null and cri.dedtStart != '' and cri.dedtEnd != null and cri.dedtEnd != ''">
			                AND de.dedt BETWEEN TO_DATE(#{cri.dedtStart}, 'YYYY-MM-DD') AND TO_DATE(#{cri.dedtEnd}, 'YYYY-MM-DD') --납기일
			            </if>
			            <choose>
			                  <when test="cri.deliveryStatus != null and cri.deliveryStatus != ''"> 
			                            AND delivery_status = #{cri.deliveryStatus}
			                  </when>
			                  <otherwise> 
			                           AND delivery_status IN ('DS01', 'DS02', 'DS03', 'DS04', 'DS05')
			                  </otherwise>
			            </choose>
	               	</where>      
		            )info
		    WHERE info.rn <![CDATA[ <= ]]>#{cri.end})page
		WHERE page.rn <![CDATA[ >= ]]>#{cri.start}
	</select>
	
	<!-- 납품조회 카운트 -->
	<select id="deliveryListCnt">
		   SELECT   COUNT(*)
            FROM    delivery de JOIN order_list ol
                                  ON de.product_order_code = ol.product_order_code
			<where>	               	
	            <if test='cri.deliveryCode != null and cri.deliveryCode != ""'>	    
	                AND de.delivery_code LIKE '%' || UPPER(#{cri.deliveryCode}) || '%'    --주문코드
	            </if>
	            <if test='cri.orderCode != null and cri.orderCode != ""'>	    
	                AND ol.product_order_code LIKE '%' || UPPER(#{cri.orderCode}) || '%'    --주문코드
	            </if>
	            <if test="cri.productName != null and cri.productName != null">		    
	                AND  de.delivery_code IN (SELECT dd.delivery_code 
                               						   FROM delivery_details dd JOIN product_info pi 
                                                       						   ON (dd.product_code = pi.product_code)
                               						   WHERE pi.product_name LIKE '%' || #{cri.productName} || '%')               --제품명
	            </if>
	            <if test="cri.productCode != null and cri.productCode != null">		    
	                AND de.delivery_code IN (SELECT  delivery_code 
                               					 FROM 	  delivery_details
                               					 WHERE   UPPER(product_code) LIKE '%' || UPPER(#{cri.productCode}) || '%')               --제품코드
	            </if>
	            <if test='cri.companyName != null and cri.companyName != ""'>
	                AND de.company_name LIKE '%' || #{cri.companyName} || '%'                          --업체명
	            </if>
	            <if test='cri.companyCode != null and cri.companyCode != ""'>
	                AND de.company_code LIKE '%' || UPPER(#{cri.companyCode}) || '%'                --업체코드
	            </if>
	            <if test='cri.deliveryChargerCode != null and cri.deliveryChargerCode != ""'>		    
	                AND de.charger_code LIKE '%' || #{cri.deliveryChargerCode} || '%'                          --주문 담당자
	            </if>
	            <if test='cri.deliveryCharger != null and cri.deliveryCharger != ""'>		    
	                AND de.charger_name LIKE '%' || #{cri.deliveryCharger} || '%'                          --주문 담당자
	            </if>
	            <if test="cri.orderDateStart != null and cri.orderDateStart != '' and cri.orderDateEnd != null and cri.orderDateEnd != ''">
	                AND de.order_date BETWEEN TO_DATE(#{cri.orderDateStart}, 'YYYY-MM-DD') AND TO_DATE(#{cri.orderDateEnd}, 'YYYY-MM-DD')  --주문일 
	            </if>
	            <if test="cri.dedtStart != null and cri.dedtStart != '' and cri.dedtEnd != null and cri.dedtEnd != ''">
	                AND de.dedt BETWEEN TO_DATE(#{cri.dedtStart}, 'YYYY-MM-DD') AND TO_DATE(#{cri.dedtEnd}, 'YYYY-MM-DD') --납기일
	            </if>
	            <choose>
	                  <when test="cri.deliveryStatus != null and cri.deliveryStatus != ''"> 
	                            AND delivery_status = #{cri.deliveryStatus}
	                  </when>
	                  <otherwise> 
	                           AND delivery_status IN ('DS01', 'DS02', 'DS03', 'DS04', 'DS05')
	                  </otherwise>
	            </choose>
              	</where>      
	</select>
	
	<select id="allcharger">	
		--구분, 담당자코드, 담당자, 등록일
		SELECT de.charger_code AS delivery_charger_code,
		       de.charger_name AS delivery_charger_name,
		       TO_CHAR(de.rgsde, 'yyyy-MM-dd') AS delivery_rgsde,
		       pa.charger_code AS packing_charger_code,
		       pa.charger_name AS packing_charger_name,
		       TO_CHAR(pa.rgsde, 'yyyy-MM-dd') AS packing_rgsde,
		       ds.charger_code AS driver_charger_code,
		       ds.charger_name AS driver_charger_name,
		       TO_CHAR(ds.rgsde, 'yyyy-MM-dd') AS driver_rgsde,
		       ds.driver_code AS driver_code,
		       ds.driver_name AS driver_name,
		       TO_CHAR(ds.start_time, 'yyyy-MM-dd') AS drive_start_time
		FROM   delivery de LEFT JOIN packing pa
		                          ON (de.delivery_code = pa.delivery_code)
		                   LEFT JOIN delivery_schedule ds
		                          ON (de.delivery_code = ds.delivery_code)
		WHERE  de.delivery_code = #{deliveryCode}
	</select>
	
	<select id="deliveryProductList">
		SELECT dd.delivery_code AS delivery_code,
			   dd.product_code AS product_code,
		       pi.product_name AS product_name,
		       SUM(dd.delivery_qy) AS qy_sum
		FROM   delivery_details dd JOIN product_info pi
		                             ON (dd.product_code = pi.product_code)
		WHERE dd.delivery_code = #{deliveryCode}
		GROUP BY dd.delivery_code, dd.product_code, pi.product_name
	</select>
	
	<select id="deliveryProductDetails">	
		WITH product_size AS(
					    SELECT  dd.product_code AS product_code,
	                            dd.product_color AS product_color,
	                            get_comm(dd.product_size) AS forpvt,
	                            dd.delivery_qy AS qy
					    FROM delivery de JOIN delivery_details dd
	                                       ON (de.delivery_code = dd.delivery_code)
					    WHERE de.delivery_code = #{deliveryCode}
					      AND dd.product_code = #{productCode}
	                      AND dd.delivery_qy > 0)
				SELECT  *
			 	FROM product_size
				pivot( sum(qy)
			            FOR forpvt IN (
	
						<foreach collection="list" item="size" separator=",">
		                 '${size.showSize}' AS ${size.showSize}
		               </foreach>
	
			            )
			)pvt
	</select>
	
</mapper>