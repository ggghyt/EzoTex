<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezotex.store.mappers.StoreMapper">
	
	<!-- 납품 코드 기반 납품목록 -->
	<select id="DeliveryList" resultType="StoreDeliveryDTO">
		SELECT *
		FROM (
       			SELECT a.* 
       			FROM (
                		SELECT ROWNUM as rn,
               				   delivery_code,
                               order_date,
                               dedt
                               FROM delivery
               )a
    		WHERE a.rn <![CDATA[ <= ]]> #{endPage}) page
		WHERE page.rn <![CDATA[ >= ]]> #{startPage}
	</select>
	
	<!-- 납품 코드 기반 납품제품 총 수량 -->
	<select id="deliveryQy" resultType="StoreDeliveryDTO">
		SELECT count(t.product_code) as deliveryQy
		FROM delivery_details t join delivery d
		ON t.delivery_code = d.delivery_code
	</select>
	
	
	<!-- 페이징 total -->
	<select id="getCount">
		select count(delivery_code)
		from delivery
	</select>
	
	
	<!-- 납품코드를 기반으로 입고해야될 제품 기본정보 리스트 -->
	<select id="findByDeliveryCode" resultType="StoreDeliveryDetailsDTO">
		SELECT p.product_code,
		       p.product_name,
		       sum(d.delivery_qy) as productQy
		FROM delivery_details d join product_info p
		on d.product_code = p.product_code
		WHERE product_se = 'PT02'
		and delivery_code = #{deliveryCode}
		group by p.product_code,
                 p.product_name
	</select>
	
	<!-- 제품코드별 사이즈 -->
	<select id="findBySize">
		SELECT get_comm(product_size) as product_size_info
		FROM product_option
		WHERE product_code = #{productCode}
		GROUP BY product_size
        ORDER BY product_size
	</select>
	
	<!-- 제품 코드 기반 옵션,요청 수량 리스트 -->
	<select id="findByProductCode">
		with temp as
		     (SELECT   product_color,
		               UPPER(get_comm(product_size)) as product_size,
		               product_code,
		               delivery_qy
		        FROM DELIVERY_DETAILS
		        WHERE product_code = #{productCode})
		select * from temp
		pivot( sum(delivery_qy)
		       for product_size in (
		       <foreach collection="list" item="size" separator=",">
                '${size.productSizeInfo}' AS ${size.productSizeInfo}
               </foreach>)
		)pvt
	</select>
	
	
	<!-- 제품옵션별 등록 -->
	<insert id="InsertProduct" parameterType="SizeDTO">
	  INSERT INTO inventory(lot,
                            product_code,
                            store_qy,
                            inventory_qy,
                            product_color,
                            product_size,
                            store_charger,
                            storage_location,
                            store_date,
                            product_se) 
		VALUES(concat(TO_CHAR(sysdate, 'yyyyMMdd'),LPAD(inventory_lot_seq.nextval, 4,'0')),
		       #{list.productCode},
		       #{list.productQy},
		       #{list.productQy},
		       #{list.color},
		       #{list.sizeCode},
		       #{name},
		       'test',
		       sysdate,
		       'PT02')
	</insert>
	
	
	<!-- 입고량에 따른 수정 -->
	<update id="UpdateDeliveryDtails" parameterType="SizeDTO">
		UPDATE delivery_details
        SET delivery_qy = delivery_qy - #{productQy}
        WHERE product_code = #{productCode}
        AND product_size = #{sizeCode}
        AND product_color = #{color}
	</update>
	
	
</mapper>