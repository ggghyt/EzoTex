<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezotex.store.mappers.InventoryMapper">
	
	<!-- 제품별 총 수량 -->
	<select id="productList" resultType="InventoryDTO">
		SELECT i.product_code,
               p.product_name,
               sum(inventory_qy) as inventory_qy
        FROM inventory  i join product_info p
        ON i.product_code = p.product_code
        WHERE product_se = 'PT02'
        GROUP BY i.product_code,
                 p.product_name
	</select>
	
	
	<!-- 제품별 색상,사이즈별 수량 -->
	<select id="productInfoList">
		with product as
          (SELECT product_color,
                  'sz' || get_comm(product_size) as product_size_info,
                  NVL(inventory_qy,0) as inventory_qy
           FROM inventory
           WHERE product_code = #{productCode})
    	select * from product
		pivot( sum(inventory_qy)
       		for product_size_info in (
       		<foreach collection="list" item="size" separator=",">
       			'${'sz'+size.productSizeInfo}' AS ${'sz'+size.productSizeInfo}
       		</foreach>)
		)pvt
	</select>
	
	
	<!-- 제품사이즈,색상별 상세리스트 -->
	<select id="inventoryList" resultType="InventoryDTO">
		SELECT i.lot,
		       p.product_name,
		       get_comm(i.product_size) as product_size,
		       i.product_color,
		       i.inventory_qy,
		       i.store_charger,
		       i.storage_location
		FROM inventory i join product_info p
		ON i.product_code = p.product_code
		WHERE i.product_size = #{sizeCode}
		AND i.product_color = #{color}
		AND i.product_code = #{productCode}
		AND i.inventory_qy > 0
	</select>
	
	
	<!-- 위치별 제품 상세 리스트(재고조정) -->
	<select id="location" resultType="InventoryDTO">
		SELECT *
		FROM (
		       SELECT a.*, ROWNUM as rn
		       FROM ( SELECT MAX(i.product_code) AS product_code,
		                       p.product_name,
		                       i.product_color,
		                       get_comm(i.product_size) AS product_size,
		                       i.lot,
		                       i.storage_location,
		                       i.inventory_qy,
		                       i.store_date
		                FROM inventory i JOIN product_info p 
		                ON i.product_code = p.product_code
		                WHERE product_se = 'PT02'
		                AND i.inventory_qy > 0
		                GROUP BY i.lot, p.product_name, i.product_color, get_comm(i.product_size), i.storage_location, i.inventory_qy, i.product_code, i.store_date
		                ORDER BY lot desc
		            ) a
		        WHERE ROWNUM <![CDATA[ <= ]]> #{end} ) page
		    WHERE page.rn <![CDATA[ >= ]]> #{start}
	</select>
	
	<!-- 재고조정 LOT 카운터 -->
	<select id="getCountProduct">
		SELECT COUNT(*)
		FROM inventory
		WHERE product_se = 'PT02'
		AND inventory_qy > 0
	</select>
	
	
	
	<!-- LOT별 불량처리 등록 -->
	<insert id="InsertErrorProduct" parameterType="ErrorProductDTO">
		INSERT INTO inventory_error(error_code,
		                            product_code,
                                    error_qy,
                                    error_info,
                                    process_date,
                                    error_charger,
                                    lot,
                                    product_color,
                                    product_size
                                                )
		VALUES(concat(TO_CHAR(sysdate, 'yyyyMMdd'),LPAD(product_error_seq.nextval, 4,'0')),
		       #{edto.productCode},
		       #{edto.errorQy},
		       #{edto.errorInfo},
		       sysdate,
		       #{name},
		       #{edto.lot},
		       #{edto.productColor},
		       #{edto.productSize})
	</insert>
	
	
	<!-- 불량처리 후 재고 업데이트 -->
	<update id="InventoryUpdate">
		UPDATE inventory
		SET inventory_qy = inventory_qy - #{errorQy}
		WHERE product_color = #{productColor}
		AND product_size = #{productSize}
		AND product_code = #{productCode}
		AND lot = #{lot}
	</update>
	
	<!-- 창고 위치 코드 리스트 -->
	<select id="storageInfoList" resultType="storageInfoDTO">
		SELECT storage_code,
		       storage_info_code,
		       storage_info_name
		FROM storage_info
	</select>
	
	<!-- 재고조정 위치이동 -->
	<update id="locationUpdate">
		UPDATE inventory
		 SET storage_location = #{storageLocation}
		WHERE lot = #{lot}
	</update>
	
	
</mapper>